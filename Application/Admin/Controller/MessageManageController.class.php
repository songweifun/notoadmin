<?php
/**
 * Created by PhpStorm.
 * User: daivd
 * Date: 2017/5/20
 * Time: 下午12:49
 */

namespace Admin\Controller;


class MessageManageController extends CommonController
{
    //消息管理
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->cate=CONTROLLER_NAME;
    }
    //站内信
    public function innernote(){
        $this->menu  =  ACTION_NAME;

        $this->display();
    }
    //获得收件箱接口
    public function getLibraryMessages(){
        $arr=M('innernote')->where(array('msg_to'=>0,'belongs_to'=>$_COOKIE['ADMIN_LIBID'],'to_del'=>0))->select();
        echo json_encode($arr);
        die;
    }

    //删除信息接口 非物理删除
    public function deleteMessage(){
        $postData=json_decode($_POST['data']);
        //print_r($postData);die;
        if (!is_array($postData)){
            if(M('innernote')->where(array('id'=>$_POST['data']))->save(array('to_del'=>1))){
                echo json_encode(array('status'=>true,'msg'=>'删除成功'));
            }else{
                echo json_encode(array('status'=>false,'msg'=>'删除失败'));
            }
        }else{
            $postDataIds=implode(',',$postData);
            if(M('innernote')->where("id in (".$postDataIds.")")->save(array('to_del'=>1))){
                echo json_encode(array('status'=>true,'msg'=>'删除成功'));
            }else{
                echo json_encode(array('status'=>false,'msg'=>'删除失败'));
            }
        }
        die;

    }
    //信息详情页页面
    public function messageDetail(){
        $id=I('get.id');
        M('innernote')->where(array('id'=>$id))->save(array('is_new'=>0));

        $this->display();

    }
    //发送信息接口
    public function sendMessage(){

        $msg_to=I('post.msg_to');
        $content=I('post.content');
        $msg_form=0;
        $belongs_to=$_COOKIE['ADMIN_LIBID'];

        $data['msg_from']=$msg_form;
        $data['msg_to']=$msg_to;
        $data['msg_title']="系统消息";
        $data['msg_content']=$content;
        $data['belongs_to']=$belongs_to;
        //echo 11111;die;


        if(M('innernote')->add($data)){
            echo json_encode(array('status'=>true,'msg'=>'发送成功'));
        }else{
            echo json_encode(array('status'=>false,'msg'=>'发送失败'));
        }
        die;

    }
    //已发信息接口
    public function alreadySendMessage(){

        $arr=M('innernote')->where(array('msg_from'=>0,'belongs_to'=>$_COOKIE['ADMIN_LIBID'],'to_del'=>0))->select();
        echo json_encode($arr);
        die;


    }
    //回收站信息接口
    public function recycleMessage(){
        $arr=M('innernote')->where(array('belongs_to'=>$_COOKIE['ADMIN_LIBID'],'to_del'=>1))->select();
        echo json_encode($arr);
        die;

    }
    //物理删除消息接口
    public function deleteMessageComplete(){
        $postData=json_decode($_POST['data']);
        //print_r($postData);die;
        if (!is_array($postData)){
            if(M('innernote')->where(array('id'=>$_POST['data']))->delete()){
                echo json_encode(array('status'=>true,'msg'=>'删除成功'));
            }else{
                echo json_encode(array('status'=>false,'msg'=>'删除失败'));
            }
        }else{
            $postDataIds=implode(',',$postData);
            if(M('innernote')->where("id in (".$postDataIds.")")->delete()){
                echo json_encode(array('status'=>true,'msg'=>'删除成功'));
            }else{
                echo json_encode(array('status'=>false,'msg'=>'删除失败'));
            }
        }
        die;

    }


}